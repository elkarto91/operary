openapi: 3.0.3
info:
  title: Operary API
  description: >
    REST API for Operary â€“ a coordination engine for task and shift orchestration in industrial operations.
  version: "0.1"
  contact:
    name: Karthik Mohan
    email: karthiknair091@gmail.com
    url: https://systemsignal.dev

servers:
  - url: https://api.operary.dev/v1
    description: Production server
  - url: http://localhost:8080/v1
    description: Development server

tags:
  - name: Tasks
  - name: Shifts
  - name: Audit Logs
  - name: SensorVault
  - name: TraceBoard

components:
  securitySchemes:
    OrgTokenAuth:
      type: apiKey
      in: header
      name: X-Org-Token

  schemas:
    Task:
      type: object
      required: [title, assigned_to]
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        assigned_to:
          type: string
        status:
          type: string
          enum: [open, in_progress, closed, escalated]
        due_time:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    Shift:
      type: object
      properties:
        id:
          type: string
          format: uuid
        supervisor_id:
          type: string
        started_at:
          type: string
          format: date-time
        ended_at:
          type: string
          format: date-time
        closed:
          type: boolean

  AuditEntry:
    type: object
    properties:
      entity_type:
        type: string
      entity_id:
        type: string
      action:
        type: string
      user_id:
        type: string
      timestamp:
        type: string
        format: date-time

  SensorEvent:
    type: object
    properties:
      id:
        type: string
      source_id:
        type: string
      event_type:
        type: string
      timestamp:
        type: string
        format: date-time
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      task_id:
        type: string
        nullable: true
      audit_id:
        type: string
        nullable: true

  IncidentReport:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      root_cause:
        type: string
      recommendations:
        type: string
      linked_task_id:
        type: string
        nullable: true
      linked_audit_id:
        type: string
        nullable: true
      fault_tree_json:
        type: string
      tags:
        type: array
        items:
          type: string
      reported_by:
        type: string
      created_at:
        type: string
        format: date-time

security:
  - OrgTokenAuth: []

paths:
  /tasks:
    post:
      tags: [Tasks]
      summary: Create a new task
      security:
        - OrgTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        201:
          description: Task created

    get:
      tags: [Tasks]
      summary: List all tasks
      security:
        - OrgTokenAuth: []
      responses:
        200:
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

  /tasks/{task_id}:
    patch:
      tags: [Tasks]
      summary: Update task status or notes
      security:
        - OrgTokenAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                notes:
                  type: string
      responses:
        200:
          description: Task updated

  /shifts:
    post:
      tags: [Shifts]
      summary: Start a new shift
      security:
        - OrgTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                supervisor_id:
                  type: string
      responses:
        201:
          description: Shift started

  /shifts/{shift_id}/close:
    post:
      tags: [Shifts]
      summary: Close a shift
      security:
        - OrgTokenAuth: []
      parameters:
        - name: shift_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Shift closed

  /audit:
    get:
      tags: [Audit Logs]
      summary: Query audit trail entries
      security:
        - OrgTokenAuth: []
      parameters:
        - name: entity_type
          in: query
          schema:
            type: string
        - name: entity_id
          in: query
          schema:
            type: string
      responses:
        200:
          description: Audit log entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuditEntry"

  /sensorvault/events:
    post:
      tags: [SensorVault]
      summary: Record a sensor event
      security:
        - OrgTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SensorEvent"
      responses:
        200:
          description: Event recorded
    get:
      tags: [SensorVault]
      summary: List sensor events
      security:
        - OrgTokenAuth: []
      responses:
        200:
          description: List of sensor events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SensorEvent"

  /sensorvault/events/{id}:
    get:
      tags: [SensorVault]
      summary: Get a sensor event by ID
      security:
        - OrgTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Sensor event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SensorEvent"
        404:
          description: Event not found
    delete:
      tags: [SensorVault]
      summary: Delete a sensor event
      security:
        - OrgTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Event deleted

  /traceboard/incidents:
    post:
      tags: [TraceBoard]
      summary: Submit an incident report
      security:
        - OrgTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncidentReport"
      responses:
        200:
          description: Report saved
    get:
      tags: [TraceBoard]
      summary: List incident reports
      security:
        - OrgTokenAuth: []
      responses:
        200:
          description: List of incident reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IncidentReport"

  /traceboard/incidents/{id}:
    get:
      tags: [TraceBoard]
      summary: Get incident report by ID
      security:
        - OrgTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Incident report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentReport"
        404:
          description: Report not found
    delete:
      tags: [TraceBoard]
      summary: Delete incident report
      security:
        - OrgTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Report deleted
